@page "/purchases"
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient httpClient
@inject NavigationManager NavigationManager
@using Core.Model



@if (purchases != null)
{
	<table class="table">
		<thead>
			<tr>
				<th>Name</th>
				<th>Description</th>
				<th>Price</th>
				<th>Seller</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var purchase in purchases)
			{
				<tr>
					<td>@purchase.Advertisement.Name</td>
					<td>@purchase.Advertisement.Description</td>
					<td>@purchase.Advertisement.Price</td>
					<td>@purchase.Advertisement.User.Username</td>
				</tr>
			}
		</tbody>
	</table>
}
else
{
	<p>No purchases found.</p>
}

@code {


	private string? username;

	private List<Purchase> purchases = new();

	private string serverurl = "https://localhost:7148/";

	private User? user;

	protected override async Task OnInitializedAsync()
	{
		user = await localStorage.GetItemAsync<User>("loginUser");
		if (user != null)
		{
			username = user.Username;
			purchases = await httpClient.GetFromJsonAsync<List<Purchase>>($"{serverurl}api/purchase/getpurchases/{username}");
		}
		else
		{
			NavigationManager.NavigateTo("/");
			purchases = new List<Purchase>(); // Ensuring no old data is shown
		}
	}

}

